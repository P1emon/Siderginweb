<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SIDERGIN - Chăm sóc sức khỏe</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">

    <link rel="stylesheet" href="~/css/LayoutStyles.css" asp-append-version="true" />

</head>
<body>
    <header>
        <div class="header-container">
            <div class="logo">
                <a asp-area="" asp-controller="Products" asp-action="Index">
                    <h1><span class="highlight">S</span>idergin</h1>
                </a>
            </div>
            <nav>
                <ul>
                    <form>
                        <!-- Search button -->
                    <li class="nav-item tooltip-container">
                        <button type="button" id="searchToggleBtn" class="icon-button" data-tooltip="Tìm kiếm">
                            <i class="fas fa-search"></i>
                        </button>

                    </li>
                    </form>
                    <!-- Menu items với tooltip -->
                    <li class="nav-item tooltip-container">
                        <a asp-area="" asp-controller="News" asp-action="Index" class="nav-link-with-tooltip">
                            <span class="icon-button" data-tooltip="Tin tức">
                                <i class="bi bi-newspaper"></i>
                            </span>
                        </a>
                    </li>

                    <li class="nav-item tooltip-container">
                        <a asp-controller="ThongBao" asp-action="Index" class="nav-link-with-tooltip">
                            <span class="icon-button" data-tooltip="Thông báo">
                                <i class="bi bi-bell"></i>
                                <span class="badge" id="event-count">0</span>
                            </span>
                        </a>
                        <div class="notification-dropdown">
                            <div class="notification-header">
                                <h5>Sự kiện mới nhất</h5>
                            </div>
                            <div class="notification-body" id="event-list">
                                <div class="loading-spinner">
                                    <i class="bi bi-arrow-repeat"></i>
                                </div>
                            </div>
                            <div class="notification-footer">
                                <a asp-controller="ThongBao" asp-action="Index" class="view-all">Xem tất cả</a>
                            </div>
                        </div>
                    </li>

                    <li class="nav-item cart-wrapper tooltip-container">
                        <a asp-area="" asp-controller="Cart" asp-action="Index" class="nav-link-with-tooltip">
                            <span class="icon-button" data-tooltip="Giỏ hàng">
                                <i class="bi bi-cart"></i>
                                <span class="badge" id="cart-count">0</span>
                            </span>
                        </a>
                    </li>

                    <!-- User profile/Authentication - Giữ nguyên -->
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item dropdown">
                            <a class="dropdown-toggle" href="#" id="profileDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person-circle"></i>
                                @if (User.Claims.Any(c => c.Type == "RankIcon" && !string.IsNullOrEmpty(c.Value)))
                                {
                                    <img src="~/Hinh/Others/@User.Claims.First(c => c.Type == "RankIcon").Value" alt="Rank Icon" style="width: 60px; height: 40px; margin-right: 8px; vertical-align: middle;" />
                                }
                                <b>@User.Identity.Name</b>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="profileDropdown">
                                <li><a class="dropdown-item" asp-area="" asp-controller="Customer" asp-action="Profile"><i class="bi bi-person-circle"></i> Cập nhật hồ sơ</a></li>
                                <li><a class="dropdown-item" asp-area="" asp-controller="Customer" asp-action="TransactionHistory"><i class="bi bi-bag-check"></i> Đơn hàng từng mua</a></li>
                                <li>
                                    <a class="dropdown-item" asp-area="" asp-controller="Customer" asp-action="Thongbao">
                                        <i class="bi bi-bell"></i> Thông báo
                                        @* @if (ViewData["UpcomingDeliveriesCount"] != null && (int)ViewData["UpcomingDeliveriesCount"] > 0)
                                        {
                                            <span class="badge bg-danger">@ViewData["UpcomingDeliveriesCount"]</span>
                                        } *@
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item text-danger" asp-area="" asp-controller="Customer" asp-action="Logout"><i class="bi bi-box-arrow-right"></i> Đăng xuất</a></li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item"><a class="main-nav-link" asp-area="" asp-controller="Customer" asp-action="Register"><i class="bi bi-person-plus"></i> Đăng ký</a></li>
                        <li class="nav-item"><a class="main-nav-link" asp-area="" asp-controller="Customer" asp-action="Login"><i class="bi bi-box-arrow-in-right"></i> Đăng nhập</a></li>
                    }
                </ul>
            </nav>
        </div>
        <div id="searchDropdown" class="search-dropdown">
            <div class="search-container">
                <form method="get" action="/Products/Search" class="search-form">
                    <input type="text" name="query" class="search-input" placeholder="Nhập từ khóa tìm kiếm..." autofocus />
                    <button type="submit" class="search-button">
                        <i class="fas fa-search"></i>
                    </button>
                </form>
            </div>
        </div>
    </header>



    <div id="searchBackdrop" class="search-backdrop"></div>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- Footer -->
    <footer class="site-footer">
        <div class="footer-wave">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 120">
                <defs>
                    <linearGradient id="waveGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                        <stop offset="0%" style="stop-color:#0F172A;stop-opacity:1" />
                        <stop offset="100%" style="stop-color:#3B82F6;stop-opacity:1" />
                    </linearGradient>
                </defs>
                <path fill="url(#waveGradient)" fill-opacity="0.9" d="M0,80L80,85C160,90,320,100,480,95C640,90,800,70,960,65C1120,60,1280,70,1360,75L1440,80L1440,120L1360,120C1280,120,1120,120,960,120C800,120,640,120,480,120C320,120,160,120,80,120L0,120Z"></path>
            </svg>
        </div>

        <div class="footer-wrapper">
            <div class="footer-content">
                <div class="brand-column">
                    <div class="footer-logo">
                        <h2><span class="highlight">S</span>idergin</h2>
                    </div>
                    <p class="brand-description">Chúng tôi cung cấp các sản phẩm bổ sung sắt và vitamin chất lượng cao, giúp cải thiện sức khỏe và tăng cường hệ miễn dịch.</p>
                    <div class="social-icons">
                        <a href="#" aria-label="Facebook" class="social-link"><i class="fab fa-facebook-f"></i> Facebook</a>
                        <a href="#" aria-label="Instagram" class="social-link"><i class="fab fa-instagram"></i> Instagram</a>
                        <a href="#" aria-label="YouTube" class="social-link"><i class="fab fa-youtube"></i> YouTube</a>
                        <a href="#" aria-label="TikTok" class="social-link"><i class="fab fa-tiktok"></i> TikTok</a>
                    </div>
                </div>

                <div class="footer-content">
                    <div class="company-info">
                        <h3><span class="highlight">S</span>idergin - Nhà phân phối Thuốc Việt số 1</h3>
                        <div class="contact-grid">
                            <div class="contact-column">
                                <p><i class="fas fa-map-marker-alt"></i> 123 Đường Số 1, Quận 1, TP. Hồ Chí Minh</p>
                                <p><i class="fas fa-id-card"></i> Mã số: 123456789</p>
                                <p><i class="fas fa-phone"></i> <a href="tel:0123456789">0123456789</a></p>
                            </div>
                            <div class="contact-column">
                                <p><i class="fab fa-whatsapp"></i> <a href="https://zalo.me/0123456789">Zalo: 0123456789</a></p>
                                <p><i class="fas fa-envelope"></i> <a href="mailto:support@sidergin.com">support@sidergin.com</a></p>
                                <p><i class="far fa-clock"></i> Thứ 2 - Thứ 6: 8:00 - 17:30</p>
                            </div>
                        </div>
                    </div>

                    <div class="footer-links">
                        <h3>Chính sách hỗ trợ</h3>
                        <ul>
                            <li><a href="#"><i class="fas fa-angle-right"></i> Chính sách mua hàng</a></li>
                            <li><a href="#"><i class="fas fa-angle-right"></i> Phương thức thanh toán</a></li>
                            <li><a href="#"><i class="fas fa-angle-right"></i> Chính sách vận chuyển</a></li>
                            <li><a href="#"><i class="fas fa-angle-right"></i> Chính sách đổi trả hàng</a></li>
                            <li><a href="#"><i class="fas fa-angle-right"></i> Bảo mật thông tin khách hàng</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="footer-bottom">
            <p>© 2025 SIDERGIN - Nhà phân phối Thuốc Việt số 1. Tất cả quyền được bảo lưu.</p>
            <a href="/Home/Privacy">Chính sách bảo mật</a>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // Thêm đoạn code này vào phần script đã có hoặc thay thế phần script hiện tại

        document.addEventListener('DOMContentLoaded', function () {
            // Các biến cho tìm kiếm
            const searchToggleBtn = document.getElementById('searchToggleBtn');
            const searchDropdown = document.getElementById('searchDropdown');
            const searchBackdrop = document.getElementById('searchBackdrop');
            const searchInput = document.querySelector('.search-input');
            const mobileSearchBtn = document.getElementById('mobileSearchBtn');
            const searchForm = document.querySelector('.search-form');

            // Hàm mở search dropdown
            function openSearchDropdown() {
                searchDropdown.classList.add('active');
                searchBackdrop.classList.add('active');

                // Thêm class đặc biệt cho mobile nếu đang ở chế độ mobile
                if (window.innerWidth <= 768) {
                    searchDropdown.classList.add('active-mobile');
                    document.body.style.overflow = 'hidden'; // Ngăn cuộn trang
                }

                setTimeout(() => {
                    searchInput.focus();
                }, 300);
            }

            // Hàm đóng search dropdown
            function closeSearchDropdown() {
                searchDropdown.classList.remove('active');
                searchDropdown.classList.remove('active-mobile');
                searchBackdrop.classList.remove('active');
                document.body.style.overflow = ''; // Cho phép cuộn trang trở lại
            }

            // Toggle search dropdown từ nút trong menu
            if (searchToggleBtn) {
                searchToggleBtn.addEventListener('click', function (e) {
                    e.preventDefault();
                    if (searchDropdown.classList.contains('active')) {
                        closeSearchDropdown();
                    } else {
                        openSearchDropdown();
                        // Thêm hiệu ứng pulse cho nút
                        this.classList.add('pulse');
                        setTimeout(() => {
                            this.classList.remove('pulse');
                        }, 500);
                    }
                });
            }

            // Mở search dropdown từ nút mobile
            if (mobileSearchBtn) {
                mobileSearchBtn.addEventListener('click', function (e) {
                    e.preventDefault();
                    openSearchDropdown();
                    // Thêm hiệu ứng pulse cho nút mobile
                    this.classList.add('pulse');
                    setTimeout(() => {
                        this.classList.remove('pulse');
                    }, 500);
                });
            }

            // Đóng search khi click vào backdrop
            if (searchBackdrop) {
                searchBackdrop.addEventListener('click', function () {
                    closeSearchDropdown();
                });
            }

            // Đóng search khi nhấn Escape
            document.addEventListener('keydown', function (e) {
                if (e.key === 'Escape' && searchDropdown && searchDropdown.classList.contains('active')) {
                    closeSearchDropdown();
                }
            });

            // Xử lý form tìm kiếm
            if (searchForm) {
                searchForm.addEventListener('submit', function () {
                    // Lưu query vào localStorage để sử dụng sau khi trang tải lại
                    const searchQuery = searchInput.value.trim();
                    if (searchQuery) {
                        localStorage.setItem('searchQuery', searchQuery);
                        localStorage.setItem('searchScrollPending', 'true');
                        closeSearchDropdown(); // Đóng dropdown sau khi submit
                    }
                });
            }

            // Kiểm tra nếu có yêu cầu cuộn trang sau khi tìm kiếm
            const searchScrollPending = localStorage.getItem('searchScrollPending');
            if (searchScrollPending === 'true') {
                // Xóa flag để không cuộn lại trong các lần tải trang tiếp theo
                localStorage.removeItem('searchScrollPending');

                // Lấy query từ localStorage hoặc URL
                const searchQuery = localStorage.getItem('searchQuery') || new URLSearchParams(window.location.search).get('query');

                if (searchQuery) {
                    // Đợi trang tải hoàn tất
                    setTimeout(() => {
                        // Tìm vị trí sản phẩm đầu tiên phù hợp với kết quả tìm kiếm
                        const productsContainer = document.querySelector('.products-container') ||
                            document.querySelector('.product-grid') ||
                            document.getElementById('searchResults');

                        if (productsContainer) {
                            // Cuộn đến vị trí container sản phẩm
                            productsContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });

                            // Highlight các sản phẩm phù hợp với từ khóa tìm kiếm
                            highlightSearchResults(searchQuery);
                        }
                    }, 500);
                }
            }

            // Hàm highlight kết quả tìm kiếm
            function highlightSearchResults(query) {
                if (!query) return;

                // Chuyển query thành mảng các từ khóa
                const keywords = query.toLowerCase().split(' ').filter(k => k.length > 1);

                // Tìm tất cả các tiêu đề sản phẩm
                const productTitles = document.querySelectorAll('.product-title, .product-name, .product-card h3');

                productTitles.forEach(element => {
                    const titleText = element.textContent.toLowerCase();

                    // Kiểm tra xem tiêu đề có chứa từ khóa tìm kiếm không
                    const isMatch = keywords.some(keyword => titleText.includes(keyword));

                    if (isMatch) {
                        // Thêm class highlight cho sản phẩm phù hợp
                        const productCard = element.closest('.product-card') || element.closest('.product-item');
                        if (productCard) {
                            productCard.classList.add('search-highlight');

                            // Animation nhẹ để thu hút sự chú ý
                            productCard.style.animation = 'highlight-pulse 2s ease-in-out';

                            // Xóa animation sau khi hoàn thành
                            setTimeout(() => {
                                productCard.style.animation = '';
                            }, 2000);
                        }
                    }
                });
            }

            // Kiểm tra vị trí cuộn để điều chỉnh nút tìm kiếm nổi khi gần footer
            function checkScrollPosition() {
                const footer = document.querySelector('.site-footer');
                if (footer) {
                    const footerTop = footer.getBoundingClientRect().top;
                    const windowHeight = window.innerHeight;

                    if (footerTop < windowHeight + 100) {
                        document.body.classList.add('has-open-footer');
                    } else {
                        document.body.classList.remove('has-open-footer');
                    }
                }
            }

            // Lắng nghe sự kiện scroll để điều chỉnh vị trí nút
            window.addEventListener('scroll', checkScrollPosition);

            // Xử lý responsive - kiểm tra khi thay đổi kích thước màn hình
            function handleResize() {
                if (window.innerWidth <= 768) {
                    if (searchDropdown && searchDropdown.classList.contains('active')) {
                        searchDropdown.classList.add('active-mobile');
                    }

                    // Kiểm tra vị trí cuộn ban đầu
                    checkScrollPosition();
                } else {
                    if (searchDropdown) {
                        searchDropdown.classList.remove('active-mobile');
                    }
                }
            }

            // Lắng nghe sự kiện resize của cửa sổ
            window.addEventListener('resize', handleResize);

            // Khởi tạo trạng thái ban đầu
            handleResize();

            // Xử lý đặc biệt cho thiết bị di động - hiển thị tooltip tạm thời khi nhấn
            if (window.innerWidth <= 768) {
                const iconButtons = document.querySelectorAll('.icon-button[data-tooltip]');

                iconButtons.forEach(button => {
                    // Không áp dụng cho nút tìm kiếm vì nó đã có xử lý riêng
                    if (button.id !== 'searchToggleBtn') {
                        button.addEventListener('touchstart', function (e) {
                            // Xóa class tooltip-shown từ tất cả các nút khác
                            iconButtons.forEach(otherButton => {
                                if (otherButton !== button) {
                                    otherButton.classList.remove('tooltip-shown');
                                }
                            });

                            // Toggle lớp tooltip-shown cho nút hiện tại
                            button.classList.toggle('tooltip-shown');

                            // Nếu tooltip đang hiển thị, thiết lập timeout để ẩn nó sau 2 giây
                            if (button.classList.contains('tooltip-shown')) {
                                setTimeout(() => {
                                    button.classList.remove('tooltip-shown');
                                }, 2000);
                            }
                        });
                    }
                });

                // Xóa tất cả tooltip khi click vào nơi khác trên trang
                document.addEventListener('click', function (e) {
                    const clickedOnTooltip = Array.from(iconButtons).some(button =>
                        button.contains(e.target) && button.id !== 'searchToggleBtn'
                    );

                    if (!clickedOnTooltip) {
                        iconButtons.forEach(button => {
                            button.classList.remove('tooltip-shown');
                        });
                    }
                });
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Load events when notification dropdown is opened
            const notificationLink = document.querySelector('.nav-link-with-tooltip[data-tooltip="Thông báo"]');
            const notificationDropdown = document.querySelector('.notification-dropdown');
            const eventList = document.getElementById('event-list');
            const eventCount = document.getElementById('event-count');

            notificationLink.addEventListener('click', function(e) {
                e.preventDefault();
                loadEvents();
            });

            function loadEvents() {
                // Show loading spinner
                eventList.innerHTML = '<div class="loading-spinner"><i class="bi bi-arrow-repeat"></i></div>';

                // Fetch events from server
                fetch('/ThongBao/GetLatestEvents')
                    .then(response => response.json())
                    .then(events => {
                        // Update event count
                        eventCount.textContent = events.length;
                        eventCount.style.display = events.length > 0 ? 'inline' : 'none';

                        // Clear loading spinner
                        eventList.innerHTML = '';

                        if (events.length === 0) {
                            eventList.innerHTML = '<div class="notification-item">Không có sự kiện mới</div>';
                            return;
                        }

                        // Add events to the list
                        events.forEach(event => {
                            const eventElement = document.createElement('div');
                            eventElement.className = 'notification-item';
                            eventElement.innerHTML = `
                                <div class="event-title">${event.tieuDe}</div>
                                <div class="event-description">${event.moTa}</div>
                                <div class="event-date">
                                    ${new Date(event.ngayBatDau).toLocaleDateString()} - 
                                    ${new Date(event.ngayKetThuc).toLocaleDateString()}
                                </div>
                            `;
                            eventList.appendChild(eventElement);
                        });
                    })
                    .catch(error => {
                        console.error('Error loading events:', error);
                        eventList.innerHTML = '<div class="notification-item">Lỗi khi tải sự kiện</div>';
                    });
            }

            // Load events on page load
            loadEvents();
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<style>
    .notification-dropdown {
        position: absolute;
        top: 100%;
        right: 0;
        width: 300px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        display: none;
        z-index: 1000;
        margin-top: 10px;
    }

    .nav-item:hover .notification-dropdown {
        display: block;
    }

    .notification-header {
        padding: 10px 15px;
        border-bottom: 1px solid #eee;
    }

    .notification-header h5 {
        margin: 0;
        color: #333;
    }

    .notification-body {
        max-height: 300px;
        overflow-y: auto;
        padding: 10px;
    }

    .notification-item {
        padding: 10px;
        border-bottom: 1px solid #eee;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .notification-item:hover {
        background-color: #f8f9fa;
    }

    .notification-item:last-child {
        border-bottom: none;
    }

    .notification-item .event-title {
        font-weight: 500;
        color: #333;
        margin-bottom: 5px;
    }

    .notification-item .event-description {
        font-size: 0.9em;
        color: #666;
    }

    .notification-item .event-date {
        font-size: 0.8em;
        color: #999;
        margin-top: 5px;
    }

    .notification-footer {
        padding: 10px 15px;
        border-top: 1px solid #eee;
        text-align: center;
    }

    .notification-footer .view-all {
        color: #0066cc;
        text-decoration: none;
    }

    .loading-spinner {
        text-align: center;
        padding: 20px;
    }

    .loading-spinner i {
        animation: spin 1s linear infinite;
    }

    

    .badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background-color: #dc3545;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.7em;
    }
</style>