
@model dynamic
@Html.Partial("livechat")
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" />

<link rel="stylesheet" href="~/css/Orderdetail.css" asp-append-version="true" />


<div class="order-container">
    <div class="order-header">
        <h1>Đơn hàng #@Model.MaHd</h1>
        <div class="order-meta">
            <div class="order-meta-item">
                <i class="far fa-calendar"></i>
                <span>@Model.NgayDat.ToString("dd/MM/yyyy")</span>
            </div>
            <div class="order-meta-item">
                <i class="far fa-user"></i>
                <span>@Model.HoTen</span>
            </div>
        </div>
        <div class="header-pattern"></div>
    </div>

    <div class="tab-navigation">
        <button class="tab-button active" data-tab="order-details">
            <i class="fas fa-info-circle"></i>
            <span>Thông tin đơn hàng</span>
        </button>
        <button class="tab-button" data-tab="products">
            <i class="fas fa-box"></i>
            <span>Sản phẩm</span>
        </button>
        <button class="tab-button" data-tab="summary">
            <i class="fas fa-file-invoice"></i>
            <span>Tổng kết</span>
        </button>
        <div class="tab-indicator"></div>
    </div>

    <div class="tab-content">
        <div id="order-details" class="tab-pane active">
            <div class="detail-section">
                <h2>Thông tin đơn hàng</h2>
                <div class="details-grid">
                    <div class="detail-card">
                        <span class="label">Mã đơn hàng</span>
                        <span class="value">#@Model.MaHd</span>
                    </div>
                    <div class="detail-card">
                        <span class="label">Ngày đặt hàng</span>
                        <span class="value">@Model.NgayDat.ToString("dd/MM/yyyy")</span>
                    </div>
                    <div class="detail-card">
                        <span class="label">Khách hàng</span>
                        <span class="value">@Model.HoTen</span>
                    </div>
                    <div class="detail-card">
                        <span class="label">Phương thức thanh toán</span>
                        <span class="value">@Model.CachThanhToan</span>
                    </div>
                </div>
            </div>

            <div class="detail-section">
                <h2>Thông tin giao hàng</h2>
                <div class="details-grid">
                    <div class="detail-card">
                        <span class="label">Địa chỉ giao hàng</span>
                        <span class="value">@Model.DiaChi</span>
                    </div>
                </div>
            </div>
        </div>

        <div id="products" class="tab-pane">
            <div class="detail-section">
                <h2>Danh sách sản phẩm</h2>
                <div class="product-list">
                    @foreach (var product in Model.Products)
                    {
                        <div class="product-item">
                            <img src="~/Hinh/HangHoa/@product.Hinh" alt="@product.ProductName" class="product-img" />
                            <div class="product-info">
                                <h3>@product.ProductName</h3>
                                <div class="product-meta">
                                    <div class="product-meta-item">
                                        <span class="label">Số lượng</span>
                                        <span class="value">@product.SoLuong</span>
                                    </div>
                                    <div class="product-meta-item">
                                        <span class="label">Đơn giá gốc</span>
                                        <span class="value currency" data-value="@product.DonGia">@product.DonGia</span>
                                    </div>
                                    <div class="product-meta-item">
                                        <span class="label">Giảm giá (%)</span>
                                        <span class="value">@(product.GiamGia * 100) %</span>
                                    </div>
                                    <div class="product-meta-item">
                                        <span class="label">Đơn giá sau giảm</span>
                                        <span class="value currency" data-value="@((product.DonGia * (1 - product.GiamGia)))">
                                            @((product.DonGia * (1 - product.GiamGia)).ToString("N0"))
                                        </span>
                                    </div>
                                    <div class="product-meta-item">
                                        <span class="label">Thành tiền</span>
                                        <span class="value currency" data-value="@((product.DonGia * (1 - product.GiamGia)) * product.SoLuong)">
                                            @(((product.DonGia * (1 - product.GiamGia)) * product.SoLuong).ToString("N0"))
                                        </span>
                                    </div>

                                </div>
                            </div>
                        </div>
                    }
                    @* <div class="shipping-fee-section">
                        <div class="shipping-fee-card">
                            <div class="shipping-fee-header">
                                <i class="fas fa-truck"></i>
                                <h3>Phí vận chuyển</h3>
                            </div>
                            <div class="shipping-fee-amount">
                                <span class="label">Phí vận chuyển</span>
                                <span class="value currency" data-value="@Model.PhiVanChuyen">@Model.PhiVanChuyen.ToString("N0")</span>
                            </div>
                        </div>
                    </div> *@
                </div>
            </div>
            </div>

        <div id="summary" class="tab-pane">
            <div class="detail-section">
                <h2>Tổng kết đơn hàng</h2>
                <div class="summary-section">
                    <div class="summary-card">
                        <div class="summary-row">
                            <span class="label">Mã đơn hàng</span>
                            <span class="value">#@Model.MaHd</span>
                        </div>
                        <div class="summary-row">
                            <span class="label">Ngày đặt</span>
                            <span class="value">@Model.NgayDat.ToString("dd/MM/yyyy")</span>
                        </div>
                        <div class="summary-row">
                            <span class="label">Khách hàng</span>
                            <span class="value">@Model.HoTen</span>
                        </div>
                        <div class="summary-row">
                            <span class="label">Tạm tính</span>
                            <span class="value currency" data-value="@Model.SubTotal">@Model.SubTotal.ToString("N0")</span>
                        </div>
                        @* <div class="summary-row">
                            <span class="label">Phí vận chuyển</span>
                            <span class="value currency" data-value="@Model.PhiVanChuyen">@Model.PhiVanChuyen.ToString("N0")</span>
                        </div> *@
                        <div class="summary-row total">
                            <span class="label">Tổng cộng</span>
                            <div>
                                <span id="totalPrice" class="value">0</span>
                                <span id="currencySymbol"> VND</span>
                            </div>
                        </div>
                        <div class="currency-select">
                            <label for="currency">Tiền tệ:</label>
                            <select id="currency">
                                <option value="VND" selected>VND</option>
                                <option value="USD">USD</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Tab functionality
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabPanes = document.querySelectorAll('.tab-pane');
        const tabIndicator = document.querySelector('.tab-indicator');
        
        function setIndicatorPosition(element) {
            const tabNav = document.querySelector('.tab-navigation');
            const buttonRect = element.getBoundingClientRect();
            const navRect = tabNav.getBoundingClientRect();
            
            tabIndicator.style.width = `${buttonRect.width}px`;
            tabIndicator.style.left = `${buttonRect.left - navRect.left}px`;
        }
        
        tabButtons.forEach(button => {
            button.addEventListener('click', function() {
                const tabId = this.getAttribute('data-tab');
                
                // Update active states
                tabButtons.forEach(btn => btn.classList.remove('active'));
                tabPanes.forEach(pane => pane.classList.remove('active'));
                
                this.classList.add('active');
                document.getElementById(tabId).classList.add('active');
                
                // Move indicator
                setIndicatorPosition(this);
            });
        });
        
        // Set initial indicator position
        if (tabButtons.length > 0) {
            setTimeout(() => {
                setIndicatorPosition(document.querySelector('.tab-button.active'));
            }, 100);
        }
        
        // Window resize handler
        window.addEventListener('resize', function() {
            setIndicatorPosition(document.querySelector('.tab-button.active'));
        });
        
        // Currency conversion
        const currencySelect = document.getElementById('currency');

        function updateCurrency() {
            const currency = currencySelect.value;
            const currencySymbol = document.getElementById('currencySymbol');
            let subtotal = 0;
            let shippingFee = 0;

            // Store original values if not already stored
            document.querySelectorAll('.currency').forEach(element => {
                if (!element.hasAttribute('data-value')) {
                    element.setAttribute('data-value', element.textContent.trim());
                }
            });

            // Get shipping fee value
            const shippingFeeElements = document.querySelectorAll('.shipping-fee-amount .value');
            if (shippingFeeElements.length > 0) {
                shippingFee = parseFloat(shippingFeeElements[0].getAttribute('data-value')) || 0;
            }

            // Update currency display and calculate subtotal
            document.querySelectorAll('.currency').forEach(element => {
                const value = parseFloat(element.getAttribute('data-value')) || 0;

                if (element.closest('.product-meta-item')) {
                    const isTotal = element.closest('.product-meta-item').querySelector('.label').textContent.includes('Thành tiền');
                    if (isTotal) {
                        subtotal += value;
                    }
                }

                if (currency === 'USD') {
                    element.textContent = (value / 25400).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                } else {
                    element.textContent = value.toLocaleString('vi-VN');
                }
            });

            // Update total (subtotal + shipping fee) and currency symbol
            const totalPrice = document.getElementById('totalPrice');
            const total = subtotal + shippingFee;

            if (currency === 'USD') {
                totalPrice.textContent = (total / 25400).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                currencySymbol.textContent = ' USD';
            } else {
                totalPrice.textContent = total.toLocaleString('vi-VN');
                currencySymbol.textContent = ' VND';
            }
        }
        
        currencySelect.addEventListener('change', updateCurrency);
        
        // Initial currency update
        updateCurrency();
        
        // Add hover effects for cards
        const cards = document.querySelectorAll('.detail-card, .product-item');
        cards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-5px)';
                this.style.boxShadow = '0 10px 15px -3px rgba(0, 0, 0, 0.1)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
                this.style.boxShadow = 'none';
            });
        });
    });
</script>
<script src="~/js/dropdown.js" asp-append-version="true"></script>