@model MyEStore.Models.ProfileVM
@{
    Layout = "_Layout";
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý thông tin cá nhân</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.1/font/bootstrap-icons.min.css" rel="stylesheet">
    <link href="~/css/profile.css" rel="stylesheet">
</head>
<body>
    <div class="container profile-container">
        <div class="profile-card">
            <div class="card-header text-center">
                <h4>Quản lý thông tin cá nhân</h4>
            </div>
            <ul class="nav nav-tabs" id="profileTabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="profile-tab" data-bs-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="true">Hồ sơ</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="password-tab" data-bs-toggle="tab" href="#password" role="tab" aria-controls="password" aria-selected="false">Đổi mật khẩu</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="false">Địa chỉ</a>
                </li>
            </ul>
            <div class="tab-content">
                <!-- Profile Tab -->
                <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                    @* <div class="avatar-container">
                        <div class="avatar">
                            @Model.FullName?.FirstOrDefault()
                        </div>
                    </div> *@
                    <form asp-action="Profile" method="post" id="profileForm">
                        <div class="form-group">
                            <label asp-for="FullName" class="form-label">Họ và Tên</label>
                            <div class="input-container">
                                <i class="bi bi-person-fill input-icon"></i>
                                <input asp-for="FullName" class="form-control" readonly />
                                <i class="bi bi-pencil-square edit-icon" role="button" onclick="toggleEdit(this, 'FullName')"></i>
                            </div>
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Email" class="form-label">Email</label>
                            <div class="input-container">
                                <i class="bi bi-envelope-fill input-icon"></i>
                                <input asp-for="Email" type="email" class="form-control" readonly />
                                <i class="bi bi-pencil-square edit-icon" role="button" onclick="toggleEdit(this, 'Email')"></i>
                            </div>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="PhoneNumber" class="form-label">Số điện thoại</label>
                            <div class="input-container">
                                <i class="bi bi-telephone-fill input-icon"></i>
                                <input asp-for="PhoneNumber" type="tel" class="form-control" readonly />
                                <i class="bi bi-pencil-square edit-icon" role="button" onclick="toggleEdit(this, 'PhoneNumber')"></i>
                            </div>
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary w-100 mt-3" id="saveBtn" disabled>Lưu thông tin</button>
                        @if (TempData["Success"] != null)
                        {
                            <div class="alert alert-success alert-dismissible fade show mt-3">
                                <i class="bi bi-check-circle-fill me-2"></i>
                                @TempData["Success"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        }
                        @if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible fade show mt-3">
                                <i class="bi bi-exclamation-circle-fill me-2"></i>
                                @TempData["Error"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        }
                    </form>
                </div>
                <!-- Change Password Tab -->
                <div class="tab-pane fade" id="password" role="tabpanel" aria-labelledby="password-tab">
                    <form asp-action="ChangePassword" method="post">
                        <div class="form-group">
                            <label for="Password" class="form-label">Mật khẩu hiện tại</label>
                            <div class="input-container">
                                <i class="bi bi-lock-fill input-icon"></i>
                                <input type="password" name="Password" class="form-control" placeholder="Nhập mật khẩu hiện tại" required />
                            </div>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Password" data-valmsg-replace="true"></span>
                        </div>
                        <div class="form-group">
                            <label for="NewPassword" class="form-label">Mật khẩu mới</label>
                            <div class="input-container">
                                <i class="bi bi-lock-fill input-icon"></i>
                                <input type="password" name="NewPassword" class="form-control" placeholder="Nhập mật khẩu mới" required />
                            </div>
                            <span class="text-danger field-validation-valid" data-valmsg-for="NewPassword" data-valmsg-replace="true"></span>
                        </div>
                        <div class="form-group">
                            <label for="ConfirmPassword" class="form-label">Nhập lại mật khẩu</label>
                            <div class="input-container">
                                <i class="bi bi-lock-fill input-icon"></i>
                                <input type="password" name="ConfirmPassword" class="form-control" placeholder="Nhập lại mật khẩu mới" required />
                            </div>
                            <span class="text-danger field-validation-valid" data-valmsg-for="ConfirmPassword" data-valmsg-replace="true"></span>
                        </div>
                        <button type="submit" class="btn btn-primary w-100 mt-3">Đổi mật khẩu</button>
                    </form>
                </div>
                <!-- Address Tab -->
                <div class="tab-pane fade" id="address" role="tabpanel" aria-labelledby="address-tab">
                    <div class="current-address">
                        <p class="fw-bold mb-1">Địa chỉ hiện tại:</p>
                        <p>@(Model.DiaChi ?? "Chưa có địa chỉ")</p>
                        <a class="collapse-toggle mt-2 d-block" data-bs-toggle="collapse" href="#addressFormCollapse" role="button" aria-expanded="false" aria-controls="addressFormCollapse">
                            <i class="bi bi-pencil-fill me-1"></i>Chỉnh sửa địa chỉ
                        </a>
                    </div>
                    <div class="collapse" id="addressFormCollapse">
                        <form id="addressForm" asp-action="UpdateAddress" method="post">
                            <div class="form-group">
                                <label for="province" class="form-label">Tỉnh/Thành phố</label>
                                <div class="input-container">
                                    <i class="bi bi-geo-alt input-icon"></i>
                                    <select class="form-select" id="province" name="province" required>
                                        <option value="">Chọn Tỉnh/Thành phố</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="district" class="form-label">Quận/Huyện</label>
                                <div class="input-container">
                                    <i class="bi bi-geo-alt input-icon"></i>
                                    <select class="form-select" id="district" name="district" required>
                                        <option value="">Chọn Quận/Huyện</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="ward" class="form-label">Phường/Xã</label>
                                <div class="input-container">
                                    <i class="bi bi-geo-alt input-icon"></i>
                                    <select class="form-select" id="ward" name="ward" required>
                                        <option value="">Chọn Phường/Xã</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="streetAddress" class="form-label">Địa chỉ cụ thể</label>
                                <div class="input-container">
                                    <i class="bi bi-house-fill input-icon"></i>
                                    <input type="text" class="form-control" id="streetAddress" name="streetAddress" placeholder="Số nhà, tên đường" required>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="address-preview">
                                    <p class="fw-bold mb-1">Địa chỉ đầy đủ:</p>
                                    <p id="fullAddress">Vui lòng nhập thông tin địa chỉ</p>
                                    <input type="hidden" id="DiaChi" name="diaChi" value="@Model.DiaChi">
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary w-100 mt-3">
                                <i class="bi bi-check2-circle me-2"></i>Lưu thông tin
                            </button>
                        </form>
                    </div>
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show mt-3">
                            <i class="bi bi-check-circle-fill me-2"></i>
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show mt-3">
                            <i class="bi bi-exclamation-circle-fill me-2"></i>
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Profile Edit Toggle
        function toggleEdit(icon, fieldName) {
            const input = document.querySelector(`[name="${fieldName}"]`);
            if (input.hasAttribute('readonly')) {
                input.removeAttribute('readonly');
                icon.classList.replace('bi-pencil-square', 'bi-check-square');
                document.getElementById('saveBtn').disabled = false;
            } else {
                input.setAttribute('readonly', '');
                icon.classList.replace('bi-check-square', 'bi-pencil-square');
            }
        }

        // Tab Navigation and Address Form Logic
        document.addEventListener('DOMContentLoaded', function () {
            // Tab Navigation
            const tabs = document.querySelectorAll('#profileTabs .nav-link');
            tabs.forEach(tab => {
                tab.addEventListener('click', function () {
                    tabs.forEach(t => t.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // Address Form Logic
            const provinceSelect = document.getElementById('province');
            const districtSelect = document.getElementById('district');
            const wardSelect = document.getElementById('ward');
            const streetAddressInput = document.getElementById('streetAddress');
            const fullAddressDisplay = document.getElementById('fullAddress');
            const diaChiInput = document.getElementById('DiaChi');

            // Loading states
            function setLoading(select, loading) {
                select.disabled = loading;
                select.parentElement.style.opacity = loading ? '0.7' : '1';
                select.parentElement.style.transition = 'opacity 0.3s ease';
            }

            // Fetch provinces
            async function loadProvinces() {
                try {
                    setLoading(provinceSelect, true);
                    const response = await fetch('https://provinces.open-api.vn/api/p/');
                    const data = await response.json();

                    data.forEach(province => {
                        const option = new Option(province.name, province.code);
                        provinceSelect.add(option);
                    });
                } catch (error) {
                    console.error('Error loading provinces:', error);
                } finally {
                    setLoading(provinceSelect, false);
                }
            }

            // Handle province change
            provinceSelect.addEventListener('change', async function () {
                districtSelect.innerHTML = '<option value="">Chọn Quận/Huyện</option>';
                wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';

                if (this.value) {
                    try {
                        setLoading(districtSelect, true);
                        const response = await fetch(`https://provinces.open-api.vn/api/p/${this.value}?depth=2`);
                        const data = await response.json();

                        data.districts.forEach(district => {
                            const option = new Option(district.name, district.code);
                            districtSelect.add(option);
                        });
                    } catch (error) {
                        console.error('Error loading districts:', error);
                    } finally {
                        setLoading(districtSelect, false);
                    }
                }
                updateFullAddress();
            });

            // Handle district change
            districtSelect.addEventListener('change', async function () {
                wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';

                if (this.value) {
                    try {
                        setLoading(wardSelect, true);
                        const response = await fetch(`https://provinces.open-api.vn/api/d/${this.value}?depth=2`);
                        const data = await response.json();

                        data.wards.forEach(ward => {
                            const option = new Option(ward.name, ward.code);
                            wardSelect.add(option);
                        });
                    } catch (error) {
                        console.error('Error loading wards:', error);
                    } finally {
                        setLoading(wardSelect, false);
                    }
                }
                updateFullAddress();
            });

            // Update full address
            function updateFullAddress() {
                const province = provinceSelect.options[provinceSelect.selectedIndex]?.text || '';
                const district = districtSelect.options[districtSelect.selectedIndex]?.text || '';
                const ward = wardSelect.options[wardSelect.selectedIndex]?.text || '';
                const street = streetAddressInput.value.trim();

                let addressParts = [];
                if (street) addressParts.push(street);
                if (ward && ward !== 'Chọn Phường/Xã') addressParts.push(ward);
                if (district && district !== 'Chọn Quận/Huyện') addressParts.push(district);
                if (province && province !== 'Chọn Tỉnh/Thành phố') addressParts.push(province);

                const fullAddress = addressParts.join(', ');
                fullAddressDisplay.textContent = fullAddress || 'Vui lòng nhập thông tin địa chỉ';
                diaChiInput.value = fullAddress;
            }

            // Event listeners
            wardSelect.addEventListener('change', updateFullAddress);
            streetAddressInput.addEventListener('input', updateFullAddress);

            // Initialize
            loadProvinces();

            // Collapse toggle animation
            const collapseElement = document.getElementById('addressFormCollapse');
            collapseElement.addEventListener('show.bs.collapse', function () {
                this.style.transition = 'height 0.3s ease';
            });
        });
    </script>
</body>
</html>