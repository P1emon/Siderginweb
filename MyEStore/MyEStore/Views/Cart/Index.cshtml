@model IEnumerable<MyEStore.Models.CartItem>

@{
    ViewData["Title"] = "Giỏ hàng thuốc";
}
<link rel="stylesheet" href="~/css/giohang.css" />

<div class="container py-5">
    <h1 class="text-center mb-4">Giỏ hàng thuốc của bạn</h1>

    @if (!Model.Any())
    {
        <div class="cart-card">
            <div class="empty-cart">
                <i class="bi bi-capsule empty-cart-icon"></i>
                <p class="empty-cart-message">Giỏ hàng của bạn đang trống.</p>
                <a href="/" class="btn btn-primary">
                    <i class="bi bi-shop"></i> Tiếp tục mua thuốc
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="cart-card">
            <div class="cart-header">
                <h5 class="cart-title">Chi tiết đơn hàng</h5>
                <span class="pharmacy-brand">MyPharma</span>
            </div>
            <div class="cart-body">
                <div class="cart-items">
                    @foreach (var item in Model)
                    {
                        <div class="cart-item-card" data-id="@item.MaHh">
                            <div class="cart-item-image">
                                <img src="~/Hinh/HangHoa/@item.Hinh" alt="@item.TenHh" class="product-img" />
                            </div>
                            <div class="cart-item-details">
                                <div class="product-name">@item.TenHh</div>
                                <div class="cart-item-price">
                                    @if (item.GiamGia > 0)
                                    {
                                        <div class="original-price">@item.DonGia.ToString("N0") đ</div>
                                        <div class="discounted-price">@((item.DonGia * (1 - item.GiamGia)).ToString("N0")) đ</div>
                                    }
                                    else
                                    {
                                        <div class="discounted-price">@item.DonGia.ToString("N0") đ</div>
                                    }
                                </div>
                                <div class="cart-item-total total-price" data-id="@item.MaHh">
                                    Thành tiền: @item.ThanhTien.ToString("N0") đ
                                </div>
                            </div>
                            <div class="cart-item-actions">
                                <div class="quantity-control">
                                    <button type="button" class="quantity-btn quantity-decrease">-</button>
                                    <div class="quantity-input">
                                        <input type="number" value="@item.SoLuong" min="1" class="quantity" data-id="@item.MaHh" />
                                    </div>
                                    <button type="button" class="quantity-btn quantity-increase">+</button>
                                </div>
                                <a asp-action="RemoveCartItem" asp-route-id="@item.MaHh" class="btn btn-sm btn-danger">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="cart-footer">
                <div class="row">
                    <div class="col-12 col-md-6 offset-md-6">
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="cart-total">Tổng cộng:</span>
                            <span class="cart-total-amount" id="total-price">@Model.Sum(item => item.ThanhTien).ToString("N0") đ</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="checkout-section text-end">
            <a href="/" class="btn btn-primary">
                <i class="bi bi-arrow-left"></i> Tiếp tục mua thuốc
            </a>
            <a asp-action="Index" asp-controller="Payment" class="btn btn-success btn-lg">
                <i class="bi bi-credit-card"></i> Thanh toán
            </a>
        </div>
    }
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Xử lý nút tăng giảm số lượng
    document.querySelectorAll('.quantity-decrease').forEach(button => {
        button.addEventListener('click', function() {
            const input = this.parentNode.querySelector('.quantity');
            const currentValue = parseInt(input.value);
            if (currentValue > 1) {
                input.value = currentValue - 1;
                triggerChangeEvent(input);
            }
        });
    });

    document.querySelectorAll('.quantity-increase').forEach(button => {
        button.addEventListener('click', function() {
            const input = this.parentNode.querySelector('.quantity');
            input.value = parseInt(input.value) + 1;
            triggerChangeEvent(input);
        });
    });

    function triggerChangeEvent(element) {
        const event = new Event('change', { bubbles: true });
        element.dispatchEvent(event);
    }

    // Xử lý khi thay đổi số lượng sản phẩm
    document.querySelectorAll('.quantity').forEach(input => {
        input.addEventListener('change', function () {
            var itemId = this.getAttribute('data-id');
            var newQuantity = parseInt(this.value);

            // Kiểm tra số lượng tối thiểu
            if (newQuantity < 1) {
                this.value = 1; // Đặt lại giá trị thành 1 nếu số lượng nhỏ hơn
                Swal.fire({
                    icon: 'warning',
                    title: 'Cảnh báo',
                    text: 'Số lượng không được nhỏ hơn 1!',
                });
                return;
            }

            // Gửi AJAX để cập nhật giỏ hàng
            fetch('/Cart/UpdateQuantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: itemId, qty: newQuantity })
            })
                .then(response => response.json())
                .then(data => {
                    // Cập nhật thành tiền cho sản phẩm
                    const totalPriceElement = document.querySelector(`.total-price[data-id='${itemId}']`);
                    totalPriceElement.innerText = 'Thành tiền: ' + data.newItemTotalPrice.toLocaleString('vi-VN') + ' đ';

                    // Cập nhật tổng tiền giỏ hàng
                    const cartTotalElement = document.getElementById('total-price');
                    cartTotalElement.innerText = data.cartTotal.toLocaleString('vi-VN') + ' đ';

                    Swal.fire({
                        icon: 'success',
                        title: 'Cập nhật thành công!',
                        text: 'Số lượng thuốc đã được thay đổi.',
                        timer: 1500,
                        showConfirmButton: false
                    });
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Không thể cập nhật số lượng. Vui lòng thử lại.',
                    });
                });
        });
    });
</script>